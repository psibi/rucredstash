jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        RUSTUP_TOOLCHAIN: stable
    maxParallel: 4
  steps:
   - script: |
       set -e
       curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain none
       export PATH=$PATH:$HOME/.cargo/bin
       rustup toolchain install $RUSTUP_TOOLCHAIN
       rustup default $RUSTUP_TOOLCHAIN
       echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
     displayName: "Install rust (*nix)"
   - bash: echo "##vso[task.setvariable variable=TAG]${BUILD_SOURCEBRANCH##refs/tags/}"
     displayName: Set TAG variable
     condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
   - script: |
       sudo apt-get update
       sudo apt-get install pkg-config libssl-dev
     displayName: "Install libssl-dev"
   - script: |
       cargo build --tests
       cargo test --lib
       cargo test --doc
     displayName: 'Test'
   - bash: ./.azure/build_release.sh
     displayName: Build Release
   - task: ArchiveFiles@2
     inputs:
       includeRootFolder: false
       archiveType: tar
       tarCompression: gz
       archiveFile: $(Build.ArtifactStagingDirectory)/rucredstash-linux-$(TAG)-$(RUSTUP_TOOLCHAIN).tar.gz
       verbose: true
     condition: startsWith(variables['TAG'], 'v')
   - task: GithubRelease@0
     displayName: Create GitHub Release
     inputs:
       githubConnection: github.com_psibi
       assets: $(Build.ArtifactStagingDirectory)/rucredstash-linux-$(TAG)-$(RUSTUP_TOOLCHAIN).tar.gz
       assetUploadMode: replace
       action: edit
       tag: $(TAG)
     condition: startsWith(variables['TAG'], 'v')
